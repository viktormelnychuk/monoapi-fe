// THIS FILE IS AUTO GENERATED BY GK-CLI DO NOT EDIT!!
package endpoint

import (
	endpoint "github.com/go-kit/kit/endpoint"
	service "github.com/viktormelnychuk/monoapi/monoapi/pkg/service"
)

// Endpoints collects all of the endpoints that compose a profile service. It's
// meant to be used as a helper struct, to collect all of the endpoints into a
// single parameter.
type Endpoints struct {
	LoginEndpoint              endpoint.Endpoint
	SignUpEndpoint             endpoint.Endpoint
	GetAllTransactionsEndpoint endpoint.Endpoint
	GetTransactionEndpoint     endpoint.Endpoint
	GetCardsEndpoint           endpoint.Endpoint
	EnableCardEndpoint         endpoint.Endpoint
}

// New returns a Endpoints struct that wraps the provided service, and wires in all of the
// expected endpoint middlewares
func New(s service.MonoapiService, mdw map[string][]endpoint.Middleware) Endpoints {
	eps := Endpoints{
		EnableCardEndpoint:         MakeEnableCardEndpoint(s),
		GetAllTransactionsEndpoint: MakeGetAllTransactionsEndpoint(s),
		GetCardsEndpoint:           MakeGetCardsEndpoint(s),
		GetTransactionEndpoint:     MakeGetTransactionEndpoint(s),
		LoginEndpoint:              MakeLoginEndpoint(s),
		SignUpEndpoint:             MakeSignUpEndpoint(s),
	}
	for _, m := range mdw["Login"] {
		eps.LoginEndpoint = m(eps.LoginEndpoint)
	}
	for _, m := range mdw["SignUp"] {
		eps.SignUpEndpoint = m(eps.SignUpEndpoint)
	}
	for _, m := range mdw["GetAllTransactions"] {
		eps.GetAllTransactionsEndpoint = m(eps.GetAllTransactionsEndpoint)
	}
	for _, m := range mdw["GetTransaction"] {
		eps.GetTransactionEndpoint = m(eps.GetTransactionEndpoint)
	}
	for _, m := range mdw["GetCards"] {
		eps.GetCardsEndpoint = m(eps.GetCardsEndpoint)
	}
	for _, m := range mdw["EnableCard"] {
		eps.EnableCardEndpoint = m(eps.EnableCardEndpoint)
	}
	return eps
}
